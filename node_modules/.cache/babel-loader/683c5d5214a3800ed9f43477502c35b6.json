{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivanp\\\\source\\\\repos\\\\avito-tech_internship\\\\src\\\\pages\\\\StoryPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Divider } from 'antd';\nimport 'antd/dist/antd.css';\nimport StoryComment from '../components/StoryComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nfunction StoryPage(_ref) {\n  _s();\n  let {} = _ref;\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    storyId\n  } = useParams();\n  const {\n    story,\n    setStory\n  } = React.useState({});\n  const {\n    comments,\n    setComments\n  } = React.useState([]);\n  let storyDate = new Date(story.time * 1000).toLocaleString();\n  async function fetchStory() {\n    try {\n      let storyFromState = state.filter(item => item.id === storyId)[0];\n      setStory(storyFromState);\n      let storyComments = [];\n      for (let commentId of storyFromState.kids) {\n        const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\n        let comment = await commentResponse.json();\n        if (comment !== null) storyComments = [...storyComments, comment];\n      }\n      dispatch(uploadComments({\n        storyId: storyId,\n        comments: storyComments\n      }));\n      setComments(storyComments);\n    } catch (error) {\n      alert('Ошибка при запросе данных');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: 16\n      },\n      loading: false,\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: story.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"url\",\n        children: [\"URL: \", story.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rating\",\n        children: [\"score: \", story.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"author\",\n        children: [\"by: \", story.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: [\"date: \", storyDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comments\",\n        children: [\"comments: \", story.kids.length()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(StoryComment, {\n        data: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(StoryPage, \"vZKiH1mqLfXwC8kPAmHDEuEceMs=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n_c = StoryPage;\nexport default StoryPage;\nvar _c;\n$RefreshReg$(_c, \"StoryPage\");","map":{"version":3,"names":["React","useParams","useSelector","useDispatch","Card","Divider","StoryComment","Meta","StoryPage","state","dispatch","storyId","story","setStory","useState","comments","setComments","storyDate","Date","time","toLocaleString","fetchStory","storyFromState","filter","item","id","storyComments","commentId","kids","commentResponse","fetch","comment","json","uploadComments","error","alert","marginTop","title","url","score","by","length","map","index"],"sources":["C:/Users/ivanp/source/repos/avito-tech_internship/src/pages/StoryPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Divider } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport StoryComment from '../components/StoryComment';\r\nconst { Meta } = Card;\r\n\r\nfunction StoryPage({}){\r\n    const state = useSelector((state)=>state);\r\n    const dispatch = useDispatch();\r\n\r\n    const { storyId } = useParams();\r\n    const { story, setStory } = React.useState({});\r\n    const { comments, setComments } = React.useState([]);\r\n    let storyDate = new Date(story.time * 1000).toLocaleString();\r\n\r\n    async function fetchStory() {\r\n        try {\r\n            let storyFromState = state.filter((item) => item.id === storyId)[0];\r\n            setStory(storyFromState);\r\n\r\n            let storyComments = [];\r\n            for (let commentId of storyFromState.kids) {\r\n                const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\r\n                let comment = await commentResponse.json();\r\n                if (comment !== null) storyComments = [...storyComments, comment];\r\n            }\r\n            dispatch(uploadComments({ storyId: storyId, comments: storyComments }));\r\n            setComments(storyComments);\r\n        } catch (error) {\r\n            alert('Ошибка при запросе данных');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Card\r\n                style={{\r\n                    marginTop: 16,\r\n                }}\r\n                loading={false}\r\n            >\r\n                <Meta\r\n                    title={story.title}\r\n                />\r\n                <span className=\"url\">URL: {story.url}</span>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"rating\">score: {story.score}</span>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"author\">by: {story.by}</span>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"date\">date: {storyDate}</span>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"comments\">comments: {story.kids.length()}</span>\r\n            </Card>\r\n            <div className=\"comments\">\r\n                {\r\n                    comments.map((comment, index) => (\r\n                        <StoryComment \r\n                            key = {index}\r\n                            data = {comment}\r\n                        />\r\n                    ))\r\n                }           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryPage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,EAAEC,OAAO,QAAQ,MAAM;AACpC,OAAO,oBAAoB;AAC3B,OAAOC,YAAY,MAAM,4BAA4B;AAAC;AACtD,MAAM;EAAEC;AAAK,CAAC,GAAGH,IAAI;AAErB,SAASI,SAAS,OAAI;EAAA;EAAA,IAAH,CAAC,CAAC;EACjB,MAAMC,KAAK,GAAGP,WAAW,CAAEO,KAAK,IAAGA,KAAK,CAAC;EACzC,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAM;IAAEQ;EAAQ,CAAC,GAAGV,SAAS,EAAE;EAC/B,MAAM;IAAEW,KAAK;IAAEC;EAAS,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,EAAE,CAAC;EACpD,IAAIG,SAAS,GAAG,IAAIC,IAAI,CAACN,KAAK,CAACO,IAAI,GAAG,IAAI,CAAC,CAACC,cAAc,EAAE;EAE5D,eAAeC,UAAU,GAAG;IACxB,IAAI;MACA,IAAIC,cAAc,GAAGb,KAAK,CAACc,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKd,OAAO,CAAC,CAAC,CAAC,CAAC;MACnEE,QAAQ,CAACS,cAAc,CAAC;MAExB,IAAII,aAAa,GAAG,EAAE;MACtB,KAAK,IAAIC,SAAS,IAAIL,cAAc,CAACM,IAAI,EAAE;QACvC,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAE,8CAA6CH,SAAU,oBAAmB,CAAC;QAChH,IAAII,OAAO,GAAG,MAAMF,eAAe,CAACG,IAAI,EAAE;QAC1C,IAAID,OAAO,KAAK,IAAI,EAAEL,aAAa,GAAG,CAAC,GAAGA,aAAa,EAAEK,OAAO,CAAC;MACrE;MACArB,QAAQ,CAACuB,cAAc,CAAC;QAAEtB,OAAO,EAAEA,OAAO;QAAEI,QAAQ,EAAEW;MAAc,CAAC,CAAC,CAAC;MACvEV,WAAW,CAACU,aAAa,CAAC;IAC9B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB,QAAC,IAAI;MACD,KAAK,EAAE;QACHC,SAAS,EAAE;MACf,CAAE;MACF,OAAO,EAAE,KAAM;MAAA,wBAEf,QAAC,IAAI;QACD,KAAK,EAAExB,KAAK,CAACyB;MAAM;QAAA;QAAA;QAAA;MAAA,QACrB,eACF;QAAM,SAAS,EAAC,KAAK;QAAA,oBAAOzB,KAAK,CAAC0B,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7C,QAAC,OAAO;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAM,SAAS,EAAC,QAAQ;QAAA,sBAAS1B,KAAK,CAAC2B,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpD,QAAC,OAAO;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAM,SAAS,EAAC,QAAQ;QAAA,mBAAM3B,KAAK,CAAC4B,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC9C,QAAC,OAAO;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAM,SAAS,EAAC,MAAM;QAAA,qBAAQvB,SAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC/C,QAAC,OAAO;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAM,SAAS,EAAC,UAAU;QAAA,yBAAYL,KAAK,CAACgB,IAAI,CAACa,MAAM,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9D,eACP;MAAK,SAAS,EAAC,UAAU;MAAA,UAEjB1B,QAAQ,CAAC2B,GAAG,CAAC,CAACX,OAAO,EAAEY,KAAK,kBACxB,QAAC,YAAY;QAET,IAAI,EAAIZ;MAAQ,GADTY,KAAK;QAAA;QAAA;QAAA;MAAA,QAGnB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA5DQnC,SAAS;EAAA,QACAN,WAAW,EACRC,WAAW,EAERF,SAAS;AAAA;AAAA,KAJxBO,SAAS;AA8DlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}