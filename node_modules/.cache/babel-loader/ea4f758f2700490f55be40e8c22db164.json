{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivanp\\\\source\\\\repos\\\\avito-tech_internship\\\\src\\\\pages\\\\StoryPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Divider, Link } from 'antd';\nimport 'antd/dist/antd.css';\nimport { uploadComments } from \"../store/actions\";\nimport StoryComment from '../components/StoryComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nfunction StoryPage(_ref) {\n  _s();\n  let {} = _ref;\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const story = state.find(item => item.id == id);\n  const [comments, setComments] = React.useState([]);\n  let storyDate = new Date(story.time * 1000).toLocaleString();\n  React.useEffect(() => {\n    fetchComments();\n  }, []);\n  async function fetchComments() {\n    try {\n      let storyComments = [];\n      if (!story.kids) return;\n      for (let commentId of story.kids) {\n        const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\n        let comment = await commentResponse.json();\n        if (comment !== null) storyComments = [...storyComments, comment];\n      }\n      //dispatch(uploadComments({ storyId: storyId, comments: storyComments }));\n      setComments(storyComments);\n    } catch (error) {\n      alert('Ошибка при запросе данных');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: 16\n      },\n      loading: false,\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: story.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: story.url,\n        children: story.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"storyinfo\",\n        children: [\" \", story.score, \" points by \", story.by, \" at \", storyDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comments\",\n        children: [story.kids ? story.kids.length : 0, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(StoryComment, {\n        data: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(StoryPage, \"gnQHHY/ji67L+qv3clCTkVTYfKk=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n_c = StoryPage;\nexport default StoryPage;\nvar _c;\n$RefreshReg$(_c, \"StoryPage\");","map":{"version":3,"names":["React","useParams","useSelector","useDispatch","Card","Divider","Link","uploadComments","StoryComment","Meta","StoryPage","state","dispatch","id","story","find","item","comments","setComments","useState","storyDate","Date","time","toLocaleString","useEffect","fetchComments","storyComments","kids","commentId","commentResponse","fetch","comment","json","error","alert","marginTop","title","url","score","by","length","map"],"sources":["C:/Users/ivanp/source/repos/avito-tech_internship/src/pages/StoryPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Divider, Link } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { uploadComments }  from \"../store/actions\"; \r\nimport StoryComment from '../components/StoryComment';\r\nconst { Meta } = Card;\r\n\r\nfunction StoryPage({}){\r\n    const state = useSelector((state)=>state);\r\n    const dispatch = useDispatch();\r\n\r\n    const { id } = useParams();\r\n    const story = state.find((item) => item.id == id);\r\n    const [ comments, setComments ] = React.useState([]);\r\n    let storyDate = new Date(story.time * 1000).toLocaleString();\r\n\r\n    React.useEffect(() => {\r\n        fetchComments();\r\n    }, []);\r\n\r\n    async function fetchComments() {\r\n        try {\r\n            let storyComments = [];\r\n            if (!story.kids)\r\n                return;\r\n            for (let commentId of story.kids) {\r\n                const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\r\n                let comment = await commentResponse.json();\r\n                if (comment !== null) storyComments = [...storyComments, comment];\r\n            }\r\n            //dispatch(uploadComments({ storyId: storyId, comments: storyComments }));\r\n            setComments(storyComments);\r\n        } catch (error) {\r\n            alert('Ошибка при запросе данных');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Card\r\n                style={{\r\n                    marginTop: 16,\r\n                }}\r\n                loading={false}\r\n            >\r\n                <Meta\r\n                    title={story.title}\r\n                />\r\n                <Link href={story.url}>{story.url}</Link>\r\n                <Divider type=\"horizontal\" />\r\n                <span className=\"storyinfo\"> {story.score} points by {story.by} at {storyDate}</span>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"comments\">{story.kids? story.kids.length : 0} comments</span>\r\n            </Card>\r\n            <div className=\"comments\">\r\n                {\r\n                    comments && \r\n                    comments.map((comment) => (\r\n                        <StoryComment \r\n                            key = {comment.id}\r\n                            data = {comment}\r\n                        />\r\n                    ))\r\n                }           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryPage;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}