{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivanp\\\\source\\\\repos\\\\avito-tech_internship\\\\src\\\\components\\\\StoryComment.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Comment } from 'antd';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StoryComment(_ref) {\n  _s();\n  let {\n    key,\n    data\n  } = _ref;\n  const [showComments, setShowComments] = React.useState(false);\n  const [nestedComments, setNestedComments] = React.useState([]);\n  console.log(data);\n  React.useEffect(() => {\n    fetchNestedComments();\n  }, []);\n  async function fetchNestedComments() {\n    try {\n      let newNestedComments = [];\n      if (!data.kids) return;\n      for (let commentId of data.kids) {\n        const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\n        let nestedComment = await commentResponse.json();\n        if (nestedComment !== null) newNestedComments = [...newNestedComments, nestedComment];\n      }\n      setNestedComments(newNestedComments);\n    } catch (error) {\n      alert('Ошибка при запросе данных');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Comment, {\n    author: data.by,\n    content: data.text,\n    datetime: new Date(data.time * 1000).toLocaleString(),\n    style: {\n      paddingLeft: 10,\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    onClick: () => setShowComments(!showComments),\n    children: showComments && nestedComments && nestedComments.filter(comment => !comment.deleted).map(comment => /*#__PURE__*/_jsxDEV(StoryComment, {\n      data: comment\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(StoryComment, \"HTigplX0g1sIV2qJ6i2AnfmBQNU=\");\n_c = StoryComment;\nexport default StoryComment;\nvar _c;\n$RefreshReg$(_c, \"StoryComment\");","map":{"version":3,"names":["React","Comment","StoryComment","key","data","showComments","setShowComments","useState","nestedComments","setNestedComments","console","log","useEffect","fetchNestedComments","newNestedComments","kids","commentId","commentResponse","fetch","nestedComment","json","error","alert","by","text","Date","time","toLocaleString","paddingLeft","paddingTop","paddingBottom","filter","comment","deleted","map","id"],"sources":["C:/Users/ivanp/source/repos/avito-tech_internship/src/components/StoryComment.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Comment } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction StoryComment({key, data}){\r\n    const [ showComments, setShowComments] = React.useState(false);\r\n    const [ nestedComments, setNestedComments ] = React.useState([]);\r\n\r\n    console.log(data);\r\n\r\n    React.useEffect(() => {\r\n      fetchNestedComments();\r\n    }, []);\r\n\r\n    async function fetchNestedComments() {\r\n        try {\r\n            let newNestedComments = [];\r\n            if (!data.kids)\r\n              return;\r\n            for (let commentId of data.kids) {\r\n                const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\r\n                let nestedComment = await commentResponse.json();\r\n                if (nestedComment !== null) newNestedComments = [...newNestedComments, nestedComment];\r\n            }\r\n            setNestedComments(newNestedComments);\r\n        } catch (error) {\r\n            alert('Ошибка при запросе данных');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Comment\r\n          author={data.by}\r\n          content={data.text}\r\n          datetime={new Date(data.time * 1000).toLocaleString()}\r\n          style={{\r\n            paddingLeft: 10,\r\n            paddingTop: 5,\r\n            paddingBottom: 5 \r\n          }}\r\n          onClick={() => setShowComments(!showComments)}\r\n        >\r\n          { \r\n              showComments &&\r\n              nestedComments &&\r\n              nestedComments\r\n              .filter((comment) => (\r\n                !comment.deleted\r\n              ))\r\n              .map((comment) => (\r\n                <StoryComment\r\n                  key = {comment.id}\r\n                  data = {comment}\r\n                />\r\n              )) \r\n          }\r\n        </Comment>\r\n    );\r\n}\r\n\r\nexport default StoryComment;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAO,oBAAoB;AAAC;AAE5B,SAASC,YAAY,OAAa;EAAA;EAAA,IAAZ;IAACC,GAAG;IAAEC;EAAI,CAAC;EAC7B,MAAM,CAAEC,YAAY,EAAEC,eAAe,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;EAC9D,MAAM,CAAEC,cAAc,EAAEC,iBAAiB,CAAE,GAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAEhEG,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EAEjBJ,KAAK,CAACY,SAAS,CAAC,MAAM;IACpBC,mBAAmB,EAAE;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,mBAAmB,GAAG;IACjC,IAAI;MACA,IAAIC,iBAAiB,GAAG,EAAE;MAC1B,IAAI,CAACV,IAAI,CAACW,IAAI,EACZ;MACF,KAAK,IAAIC,SAAS,IAAIZ,IAAI,CAACW,IAAI,EAAE;QAC7B,MAAME,eAAe,GAAG,MAAMC,KAAK,CAAE,8CAA6CF,SAAU,oBAAmB,CAAC;QAChH,IAAIG,aAAa,GAAG,MAAMF,eAAe,CAACG,IAAI,EAAE;QAChD,IAAID,aAAa,KAAK,IAAI,EAAEL,iBAAiB,GAAG,CAAC,GAAGA,iBAAiB,EAAEK,aAAa,CAAC;MACzF;MACAV,iBAAiB,CAACK,iBAAiB,CAAC;IACxC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ;EAEA,oBACI,QAAC,OAAO;IACN,MAAM,EAAElB,IAAI,CAACmB,EAAG;IAChB,OAAO,EAAEnB,IAAI,CAACoB,IAAK;IACnB,QAAQ,EAAE,IAAIC,IAAI,CAACrB,IAAI,CAACsB,IAAI,GAAG,IAAI,CAAC,CAACC,cAAc,EAAG;IACtD,KAAK,EAAE;MACLC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,CAAC;MACbC,aAAa,EAAE;IACjB,CAAE;IACF,OAAO,EAAE,MAAMxB,eAAe,CAAC,CAACD,YAAY,CAAE;IAAA,UAG1CA,YAAY,IACZG,cAAc,IACdA,cAAc,CACbuB,MAAM,CAAEC,OAAO,IACd,CAACA,OAAO,CAACC,OACV,CAAC,CACDC,GAAG,CAAEF,OAAO,iBACX,QAAC,YAAY;MAEX,IAAI,EAAIA;IAAQ,GADTA,OAAO,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAGpB;EAAC;IAAA;IAAA;IAAA;EAAA,QAEE;AAElB;AAAC,GAtDQjC,YAAY;AAAA,KAAZA,YAAY;AAwDrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}