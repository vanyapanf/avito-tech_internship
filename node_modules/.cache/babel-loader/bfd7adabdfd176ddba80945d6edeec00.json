{"ast":null,"code":"import * as actions from './actionTypes';\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actions.STORIES_UPDATE:\n      return action.payload;\n    case actions.COMMENTS_UPLOAD:\n      return state.map(item => {\n        if (item.id === action.payload.storyId) return {\n          ...item,\n          comments: action.payload.comments\n        };\n        return task;\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["actions","reducer","state","action","type","STORIES_UPDATE","payload","COMMENTS_UPLOAD","map","item","id","storyId","comments","task"],"sources":["C:/Users/ivanp/source/repos/avito-tech_internship/src/store/reducer.js"],"sourcesContent":["import * as actions from './actionTypes';\r\n\r\nexport default function reducer(state = [], action) {\r\n    switch (action.type) {\r\n        case actions.STORIES_UPDATE:\r\n            return action.payload;\r\n        case actions.COMMENTS_UPLOAD:\r\n            return state.map(item => {\r\n                if (item.id === action.payload.storyId)\r\n                  return { ...item, comments: action.payload.comments }\r\n                return task;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,eAAe;AAExC,eAAe,SAASC,OAAO,GAAqB;EAAA,IAApBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,OAAO,CAACK,cAAc;MACvB,OAAOF,MAAM,CAACG,OAAO;IACzB,KAAKN,OAAO,CAACO,eAAe;MACxB,OAAOL,KAAK,CAACM,GAAG,CAACC,IAAI,IAAI;QACrB,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO,CAACK,OAAO,EACpC,OAAO;UAAE,GAAGF,IAAI;UAAEG,QAAQ,EAAET,MAAM,CAACG,OAAO,CAACM;QAAS,CAAC;QACvD,OAAOC,IAAI;MACf,CAAC,CAAC;IACN;MACI,OAAOX,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module"}