{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivanp\\\\source\\\\repos\\\\avito-tech_internship\\\\src\\\\pages\\\\StoryPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReloadOutlined, LeftOutlined } from '@ant-design/icons';\nimport { Card, Button, Divider, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport { uploadComments } from \"../store/actions\";\nimport StoryComment from '../components/StoryComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst {\n  Link\n} = Typography;\nfunction StoryPage(_ref) {\n  _s();\n  let {} = _ref;\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [story, setStory] = React.useState({}); //state.find((item) => item.id == id);\n  const [comments, setComments] = React.useState([]);\n  React.useEffect(() => {\n    fetchStory();\n  }, []);\n  async function fetchStory() {\n    try {\n      let storyData = state.find(item => item.id == id);\n      setStory(storyData);\n      let storyComments = [];\n      if (!storyData.kids) return;\n      for (let commentId of story.kids) {\n        const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\n        let comment = await commentResponse.json();\n        if (comment !== null) storyComments = [...storyComments, comment];\n      }\n      //dispatch(uploadComments({ storyId: storyId, comments: storyComments }));\n      setComments(storyComments);\n    } catch (error) {\n      alert('Ошибка при запросе данных');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this),\n      size: \"large\",\n      style: {\n        background: \"#ff6600\",\n        borderColor: \"#ff6600\",\n        position: \"fixed\",\n        top: \"50px\",\n        left: \"30px\"\n      },\n      onClick: () => navigate(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this),\n      size: \"large\",\n      style: {\n        background: \"#ff6600\",\n        borderColor: \"#ff6600\",\n        position: \"fixed\",\n        top: \"50px\",\n        right: \"30px\"\n      },\n      onClick: () => fetchStory()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: 16\n      },\n      loading: false,\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: story.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: story.url,\n        children: \"Link to story\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"storyinfo\",\n        children: [\" \", story.score, \" points by \", story.by, \" at \", new Date(story.time * 1000).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        type: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"comments\",\n        children: [story.kids ? story.kids.length : 0, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(StoryComment, {\n        data: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(StoryPage, \"5+nJi6GnqwUUyfUZjO+yJF8Ia7I=\", false, function () {\n  return [useSelector, useDispatch, useParams, useNavigate];\n});\n_c = StoryPage;\nexport default StoryPage;\nvar _c;\n$RefreshReg$(_c, \"StoryPage\");","map":{"version":3,"names":["React","useParams","useNavigate","useSelector","useDispatch","ReloadOutlined","LeftOutlined","Card","Button","Divider","Typography","uploadComments","StoryComment","Meta","Link","StoryPage","state","dispatch","id","navigate","story","setStory","useState","comments","setComments","useEffect","fetchStory","storyData","find","item","storyComments","kids","commentId","commentResponse","fetch","comment","json","error","alert","background","borderColor","position","top","left","right","marginTop","title","url","score","by","Date","time","toLocaleString","length","map"],"sources":["C:/Users/ivanp/source/repos/avito-tech_internship/src/pages/StoryPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ReloadOutlined, LeftOutlined } from '@ant-design/icons';\r\nimport { Card, Button, Divider, Typography } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { uploadComments }  from \"../store/actions\"; \r\nimport StoryComment from '../components/StoryComment';\r\nconst { Meta } = Card;\r\nconst { Link } = Typography;\r\n\r\nfunction StoryPage({}){\r\n    const state = useSelector((state)=>state);\r\n    const dispatch = useDispatch();\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [ story, setStory ] = React.useState({});//state.find((item) => item.id == id);\r\n    const [ comments, setComments ] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        fetchStory();\r\n    }, []);\r\n\r\n    async function fetchStory() {\r\n        try {\r\n            let storyData = state.find((item) => item.id == id);\r\n            setStory(storyData);\r\n            let storyComments = [];\r\n            if (!storyData.kids)\r\n                return;\r\n            for (let commentId of story.kids) {\r\n                const commentResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${commentId}.json?print=pretty`);\r\n                let comment = await commentResponse.json();\r\n                if (comment !== null) storyComments = [...storyComments, comment];\r\n            }\r\n            //dispatch(uploadComments({ storyId: storyId, comments: storyComments }));\r\n            setComments(storyComments);\r\n        } catch (error) {\r\n            alert('Ошибка при запросе данных');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Button \r\n                type=\"primary\" \r\n                shape=\"circle\" \r\n                icon={<LeftOutlined />} \r\n                size=\"large\"\r\n                style={{ \r\n                background: \"#ff6600\", \r\n                borderColor: \"#ff6600\",\r\n                position: \"fixed\",\r\n                top: \"50px\",\r\n                left: \"30px\"\r\n                }}\r\n                onClick={() => navigate(-1)}\r\n            />\r\n            <Button \r\n                type=\"primary\" \r\n                shape=\"circle\" \r\n                icon={<ReloadOutlined />} \r\n                size=\"large\"\r\n                style={{ \r\n                background: \"#ff6600\", \r\n                borderColor: \"#ff6600\",\r\n                position: \"fixed\",\r\n                top: \"50px\",\r\n                right: \"30px\"\r\n                }}\r\n                onClick={() => fetchStory()}\r\n            />\r\n            <Card\r\n                style={{\r\n                    marginTop: 16,\r\n                }}\r\n                loading={false}\r\n            >\r\n                <Meta\r\n                    title={story.title}\r\n                />\r\n                <Link href={story.url}>Link to story</Link>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"storyinfo\"> {story.score} points by {story.by} at {new Date(story.time * 1000).toLocaleString()}</span>\r\n                <Divider type=\"vertical\" />\r\n                <span className=\"comments\">{story.kids? story.kids.length : 0} comments</span>\r\n            </Card>\r\n            <div className=\"comments\">\r\n                {\r\n                    comments && \r\n                    comments.map((comment) => (\r\n                        <StoryComment \r\n                            key = {comment.id}\r\n                            data = {comment}\r\n                        />\r\n                    ))\r\n                }           \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryPage;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}