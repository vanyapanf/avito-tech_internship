{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivanp\\\\source\\\\repos\\\\avito-tech_internship\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Button, Space, Spin } from 'antd';\nimport 'antd/dist/antd.css';\nimport StoryCard from '../components/StoryCard';\nimport { updateStories } from \"../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home(_ref) {\n  _s();\n  let {} = _ref;\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    fetchStories();\n    setInterval(fetchStories, 60000);\n  }, []);\n  async function fetchStories() {\n    try {\n      const newStoriesIdsResponse = await fetch('https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty');\n      let newStoriesIds = await newStoriesIdsResponse.json();\n      newStoriesIds = newStoriesIds.filter((storyId, index) => index < 100);\n      let newStories = [];\n      for (let storyId of newStoriesIds) {\n        const storyResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${storyId}.json?print=pretty`);\n        let story = await storyResponse.json();\n        if (story !== null) newStories = [...newStories, story];\n      }\n      dispatch(updateStories(newStories));\n    } catch (error) {\n      alert('Ошибка при запросе данных');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      shape: \"circle\",\n      icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this),\n      size: \"large\",\n      style: {\n        background: \"#ff6600\",\n        borderColor: \"#ff6600\",\n        position: \"fixed\",\n        top: \"50px\",\n        right: \"30px\",\n        zIndex: 1001\n      },\n      onClick: () => fetchStories()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), state.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : state.map((story, index) => /*#__PURE__*/_jsxDEV(StoryCard, {\n      data: story\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"FWkvKHga9et6MC1eWo2CBPmZzW4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useSelector","useDispatch","ReloadOutlined","Button","Space","Spin","StoryCard","updateStories","Home","state","dispatch","useEffect","fetchStories","setInterval","newStoriesIdsResponse","fetch","newStoriesIds","json","filter","storyId","index","newStories","storyResponse","story","error","alert","background","borderColor","position","top","right","zIndex","length","map"],"sources":["C:/Users/ivanp/source/repos/avito-tech_internship/src/pages/Home.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ReloadOutlined } from '@ant-design/icons';\r\nimport { Button, Space, Spin } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport StoryCard from '../components/StoryCard';\r\nimport { updateStories }  from \"../store/actions\"; \r\n\r\nfunction Home({}) {\r\n\r\n  const state = useSelector((state)=>state);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    fetchStories();\r\n    setInterval(fetchStories, 60000);\r\n  }, []);\r\n\r\n  async function fetchStories() {\r\n    try {\r\n      const newStoriesIdsResponse = await fetch('https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty');\r\n      let newStoriesIds = await newStoriesIdsResponse.json();\r\n      newStoriesIds = newStoriesIds.filter((storyId, index) => index < 100);\r\n\r\n      let newStories = [];\r\n      for (let storyId of newStoriesIds) {\r\n        const storyResponse = await fetch(`https://hacker-news.firebaseio.com/v0/item/${storyId}.json?print=pretty`);\r\n        let story = await storyResponse.json();\r\n        if (story !== null) newStories = [...newStories, story];\r\n      }\r\n\r\n      dispatch(updateStories(newStories));\r\n    } catch (error) {\r\n      alert('Ошибка при запросе данных');\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"content\">\r\n      <Button \r\n        type=\"primary\" \r\n        shape=\"circle\" \r\n        icon={<ReloadOutlined />} \r\n        size=\"large\"\r\n        style={{ \r\n          background: \"#ff6600\", \r\n          borderColor: \"#ff6600\",\r\n          position: \"fixed\",\r\n          top: \"50px\",\r\n          right: \"30px\",\r\n          zIndex: 1001\r\n        }}\r\n        onClick={() => fetchStories()}\r\n      />\r\n      {\r\n        (state.length === 0) ?\r\n        <div className=\"loading\">\r\n          <Spin size=\"large\" />\r\n        </div>\r\n        :\r\n        state.map((story, index) => (\r\n          <StoryCard\r\n            key = {index}\r\n            data = {story}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,MAAM;AAC1C,OAAO,oBAAoB;AAC3B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,aAAa,QAAS,kBAAkB;AAAC;AAElD,SAASC,IAAI,OAAK;EAAA;EAAA,IAAJ,CAAC,CAAC;EAEd,MAAMC,KAAK,GAAGT,WAAW,CAAES,KAAK,IAAGA,KAAK,CAAC;EACzC,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9BF,KAAK,CAACY,SAAS,CAAC,MAAM;IACpBC,YAAY,EAAE;IACdC,WAAW,CAACD,YAAY,EAAE,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,YAAY,GAAG;IAC5B,IAAI;MACF,MAAME,qBAAqB,GAAG,MAAMC,KAAK,CAAC,oEAAoE,CAAC;MAC/G,IAAIC,aAAa,GAAG,MAAMF,qBAAqB,CAACG,IAAI,EAAE;MACtDD,aAAa,GAAGA,aAAa,CAACE,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAKA,KAAK,GAAG,GAAG,CAAC;MAErE,IAAIC,UAAU,GAAG,EAAE;MACnB,KAAK,IAAIF,OAAO,IAAIH,aAAa,EAAE;QACjC,MAAMM,aAAa,GAAG,MAAMP,KAAK,CAAE,8CAA6CI,OAAQ,oBAAmB,CAAC;QAC5G,IAAII,KAAK,GAAG,MAAMD,aAAa,CAACL,IAAI,EAAE;QACtC,IAAIM,KAAK,KAAK,IAAI,EAAEF,UAAU,GAAG,CAAC,GAAGA,UAAU,EAAEE,KAAK,CAAC;MACzD;MAEAb,QAAQ,CAACH,aAAa,CAACc,UAAU,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB,QAAC,MAAM;MACL,IAAI,EAAC,SAAS;MACd,KAAK,EAAC,QAAQ;MACd,IAAI,eAAE,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAI;MACzB,IAAI,EAAC,OAAO;MACZ,KAAK,EAAE;QACLC,UAAU,EAAE,SAAS;QACrBC,WAAW,EAAE,SAAS;QACtBC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,MAAM;QACXC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV,CAAE;MACF,OAAO,EAAE,MAAMnB,YAAY;IAAG;MAAA;MAAA;MAAA;IAAA,QAC9B,EAECH,KAAK,CAACuB,MAAM,KAAK,CAAC,gBACnB;MAAK,SAAS,EAAC,SAAS;MAAA,uBACtB,QAAC,IAAI;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjB,GAENvB,KAAK,CAACwB,GAAG,CAAC,CAACV,KAAK,EAAEH,KAAK,kBACrB,QAAC,SAAS;MAER,IAAI,EAAIG;IAAM,GADPH,KAAK;MAAA;MAAA;MAAA;IAAA,QAGf,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV;AAAC,GA7DQZ,IAAI;EAAA,QAEGR,WAAW,EACRC,WAAW;AAAA;AAAA,KAHrBO,IAAI;AA+Db,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}